// Mocks generated by Mockito 5.4.6 from annotations
// in lexxi/test/application/item_dynamic/item_dynamic_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:lexxi/domain/item_dynamic/model/item.dart' as _i4;
import 'package:lexxi/domain/item_dynamic/repository/item_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [IItemRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIItemRepository extends _i1.Mock implements _i2.IItemRepository {
  MockIItemRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> createItem({
    required String? collection,
    required _i4.Item? item,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createItem, [], {
              #collection: collection,
              #item: item,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i4.Item?> getItemById({
    required String? collection,
    required String? id,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getItemById, [], {
              #collection: collection,
              #id: id,
            }),
            returnValue: _i3.Future<_i4.Item?>.value(),
          )
          as _i3.Future<_i4.Item?>);

  @override
  _i3.Future<List<_i4.Item>> getAllItems({required String? collection}) =>
      (super.noSuchMethod(
            Invocation.method(#getAllItems, [], {#collection: collection}),
            returnValue: _i3.Future<List<_i4.Item>>.value(<_i4.Item>[]),
          )
          as _i3.Future<List<_i4.Item>>);

  @override
  _i3.Future<void> updateItem({
    required String? collection,
    required _i4.Item? item,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateItem, [], {
              #collection: collection,
              #item: item,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Item>> searchByField({
    required String? collection,
    required String? field,
    required dynamic value,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchByField, [], {
              #collection: collection,
              #field: field,
              #value: value,
            }),
            returnValue: _i3.Future<List<_i4.Item>>.value(<_i4.Item>[]),
          )
          as _i3.Future<List<_i4.Item>>);

  @override
  _i3.Future<void> deleteItem({
    required String? collection,
    required String? id,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteItem, [], {
              #collection: collection,
              #id: id,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Item>> getAllItemsApi() =>
      (super.noSuchMethod(
            Invocation.method(#getAllItemsApi, []),
            returnValue: _i3.Future<List<_i4.Item>>.value(<_i4.Item>[]),
          )
          as _i3.Future<List<_i4.Item>>);

  @override
  _i3.Future<List<String>> getSimulacro({
    required String? grado,
    int? cantidad = 2,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSimulacro, [], {
              #grado: grado,
              #cantidad: cantidad,
            }),
            returnValue: _i3.Future<List<String>>.value(<String>[]),
          )
          as _i3.Future<List<String>>);

  @override
  _i3.Future<List<_i4.Item>> getAllItemsStateAndCity(String? endPoint) =>
      (super.noSuchMethod(
            Invocation.method(#getAllItemsStateAndCity, [endPoint]),
            returnValue: _i3.Future<List<_i4.Item>>.value(<_i4.Item>[]),
          )
          as _i3.Future<List<_i4.Item>>);

  @override
  _i3.Future<List<_i4.Item>> getItemsByIdsBulk({
    required String? collection,
    required List<String>? ids,
    required String? grado,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getItemsByIdsBulk, [], {
              #collection: collection,
              #ids: ids,
              #grado: grado,
            }),
            returnValue: _i3.Future<List<_i4.Item>>.value(<_i4.Item>[]),
          )
          as _i3.Future<List<_i4.Item>>);
}
