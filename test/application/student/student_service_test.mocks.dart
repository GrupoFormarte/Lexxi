// Mocks generated by Mockito 5.4.6 from annotations
// in lexxi/test/application/student/student_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:lexxi/domain/auth/model/recordatorio_personalizado.dart' as _i5;
import 'package:lexxi/domain/quiz/model/result_quiz_model.dart' as _i6;
import 'package:lexxi/domain/student/model/student.dart' as _i4;
import 'package:lexxi/domain/student/repositorie/student_repositorie.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [StudentsRepositorie].
///
/// See the documentation for Mockito's code generation for more information.
class MockStudentsRepositorie extends _i1.Mock
    implements _i2.StudentsRepositorie {
  MockStudentsRepositorie() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Student?> getInfo(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getInfo, [id]),
            returnValue: _i3.Future<_i4.Student?>.value(),
          )
          as _i3.Future<_i4.Student?>);

  @override
  _i3.Future<void> update(_i4.Student? student) =>
      (super.noSuchMethod(
            Invocation.method(#update, [student]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> create(_i4.Student? student) =>
      (super.noSuchMethod(
            Invocation.method(#create, [student]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> config(_i5.Config? config) =>
      (super.noSuchMethod(
            Invocation.method(#config, [config]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<Map<String, dynamic>> getPosition(String? id, String? grado) =>
      (super.noSuchMethod(
            Invocation.method(#getPosition, [id, grado]),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<void> saveStudentResponse(_i6.Respuesta? rsult) =>
      (super.noSuchMethod(
            Invocation.method(#saveStudentResponse, [rsult]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
