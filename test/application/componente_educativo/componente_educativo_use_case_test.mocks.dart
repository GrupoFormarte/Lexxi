// Mocks generated by Mockito 5.4.6 from annotations
// in lexxi/test/application/componente_educativo/componente_educativo_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:lexxi/domain/componente_educativo/model/componente_educativo.dart'
    as _i2;
import 'package:lexxi/domain/componente_educativo/repository/componente_educativo_repo.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeComponenteEducativo_0 extends _i1.SmartFake
    implements _i2.ComponenteEducativo {
  _FakeComponenteEducativo_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ComponenteEducativoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockComponenteEducativoRepository extends _i1.Mock
    implements _i3.ComponenteEducativoRepository {
  MockComponenteEducativoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> create({
    required _i2.ComponenteEducativo? data,
    required String? collection,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#create, [], {
              #data: data,
              #collection: collection,
            }),
            returnValue: _i4.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#create, [], {
                  #data: data,
                  #collection: collection,
                }),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<List<_i2.ComponenteEducativo>> getAll({
    required String? collection,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getAll, [], {#collection: collection}),
            returnValue: _i4.Future<List<_i2.ComponenteEducativo>>.value(
              <_i2.ComponenteEducativo>[],
            ),
          )
          as _i4.Future<List<_i2.ComponenteEducativo>>);

  @override
  _i4.Future<List<_i2.ComponenteEducativo>> search({
    required String? collection,
    required String? searchTerm,
    required List<String>? fields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#search, [], {
              #collection: collection,
              #searchTerm: searchTerm,
              #fields: fields,
            }),
            returnValue: _i4.Future<List<_i2.ComponenteEducativo>>.value(
              <_i2.ComponenteEducativo>[],
            ),
          )
          as _i4.Future<List<_i2.ComponenteEducativo>>);

  @override
  _i4.Future<_i2.ComponenteEducativo> getById({
    required String? id,
    required String? collection,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getById, [], {#id: id, #collection: collection}),
            returnValue: _i4.Future<_i2.ComponenteEducativo>.value(
              _FakeComponenteEducativo_0(
                this,
                Invocation.method(#getById, [], {
                  #id: id,
                  #collection: collection,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.ComponenteEducativo>);

  @override
  _i4.Future<void> delete({required String? collection}) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {#collection: collection}),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> update({
    required _i2.ComponenteEducativo? data,
    required String? id,
    required String? collection,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#update, [], {
              #data: data,
              #id: id,
              #collection: collection,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
